{"code":"!function(r){var o={};function e(t){if(o[t])return o[t].exports;var n=o[t]={i:t,l:!1,exports:{}};return r[t].call(n.exports,n,n.exports,e),n.l=!0,n.exports}e.m=r,e.c=o,e.d=function(r,o,t){e.o(r,o)||Object.defineProperty(r,o,{configurable:!1,enumerable:!0,get:t})},e.r=function(r){Object.defineProperty(r,\"__esModule\",{value:!0})},e.n=function(r){var o=r&&r.__esModule?function(){return r.default}:function(){return r};return e.d(o,\"a\",o),o},e.o=function(r,o){return Object.prototype.hasOwnProperty.call(r,o)},e.p=\"\",e(e.s=4)}([function(r,o){!function(){function r(){}r.returnPieceOfColor=function(r){return r==Color.BLUE?this.BLUE:r==Color.RED?this.RED:r==Color.GREEN?this.GREEN:r==Color.YELLOW?this.YELLOW:void 0},r.BLUE=new Piece(\"blue\",Color.BLUE,1),r.RED=new Piece(\"red\",Color.RED,1),r.YELLOW=new Piece(\"yellow\",Color.YELLOW,1),r.GREEN=new Piece(\"green\",Color.GREEN,1),r.NONE=new Piece(\"white\",Color.NONE,0)}()},function(r,o){},function(r,o){var e;!function(r){r[r.RED=0]=\"RED\",r[r.BLUE=1]=\"BLUE\",r[r.GREEN=2]=\"GREEN\",r[r.YELLOW=3]=\"YELLOW\",r[r.NONE=4]=\"NONE\"}(e||(e={}))},function(r,o){!function(){function r(){this.squareArray=[],this.cornerSequence=[\"E5\",\"N4\",\"E2\",\"S4\",\"E4\",\"S2\",\"W4\",\"S4\",\"W2\",\"N4\",\"W4\",\"N1\"],this.redSquareArray=[],this.blueSquareArray=[],this.greenSquareArray=[],this.yellowSquareArray=[],this.fillSquareArray(),this.fillColouredSquareArrays()}r.prototype.fillSquareArray=function(){for(var r=-1,o=4,e=0,t=0;t<40;t++){var n=this.cornerSequence[e],i=n.substr(0,1),u=parseInt(n.substr(1,1));\"E\"==i&&(r+=1),\"N\"==i&&(o-=1),\"S\"==i&&(o+=1),\"W\"==i&&(r-=1),u-=1,this.cornerSequence[e]=i+String(u),u<1&&e++,this.squareArray[t]=new Square(PieceHolder.NONE,50*r,50*o,Color.NONE)}this.squareArray[0].isStartingSquareOfColor=Color.RED,this.squareArray[0].occupyingPiece=PieceHolder.RED,this.squareArray[39].isFinalSquareOfColor=Color.RED,this.squareArray[10].isStartingSquareOfColor=Color.BLUE,this.squareArray[10].occupyingPiece=PieceHolder.BLUE,this.squareArray[9].isFinalSquareOfColor=Color.BLUE,this.squareArray[20].isStartingSquareOfColor=Color.GREEN,this.squareArray[20].occupyingPiece=PieceHolder.GREEN,this.squareArray[19].isFinalSquareOfColor=Color.GREEN,this.squareArray[30].isStartingSquareOfColor=Color.YELLOW,this.squareArray[30].occupyingPiece=PieceHolder.YELLOW,this.squareArray[29].isFinalSquareOfColor=Color.YELLOW},r.prototype.fillColouredSquareArrays=function(){for(var r=0;r<4;r++)this.redSquareArray[r]=new ColouredSquare(PieceHolder.NONE,50+50*r,250,Color.RED),this.blueSquareArray[r]=new ColouredSquare(PieceHolder.NONE,250,50+50*r,Color.BLUE),this.greenSquareArray[r]=new ColouredSquare(PieceHolder.NONE,450-50*r,250,Color.BLUE),this.yellowSquareArray[r]=new ColouredSquare(PieceHolder.NONE,250,450-50*r,Color.YELLOW)},r.prototype.getClickedSquareIndex=function(r,o){for(var e=0;e<this.squareArray.length;e++){var t=this.squareArray[e];if(r>t.xPos&&r<t.xPos+50&&o>t.yPos&&o<t.yPos+50)return e}return 0},r.prototype.getNumberOfPawnsOnBoardOfColor=function(r){for(var o=0,e=0;e<this.squareArray.length;e++){this.squareArray[e].occupyingPiece.color==r&&o++}return o},r.prototype.getNumberOfPawnsOnEndRowOfColor=function(r){var o=[];r==Color.RED&&(o=this.redSquareArray),r==Color.BLUE&&(o=this.blueSquareArray),r==Color.GREEN&&(o=this.greenSquareArray),r==Color.YELLOW&&(o=this.yellowSquareArray);for(var e=0,t=0;t<o.length;t++)o[t].occupyingPiece==PieceHolder.returnPieceOfColor(r)&&e++;return e},r.prototype.getStartingSquareOfColor=function(r){return r==Color.RED?0:r==Color.BLUE?10:r==Color.GREEN?20:r==Color.YELLOW?30:void 0},r.prototype.getFinalSquareOfColor=function(r){return r==Color.RED?39:r==Color.BLUE?9:r==Color.GREEN?19:r==Color.YELLOW?29:void 0},r.prototype.getSquareArrayOfColor=function(r){return r==Color.RED?this.redSquareArray:r==Color.BLUE?this.blueSquareArray:r==Color.GREEN?this.greenSquareArray:r==Color.YELLOW?this.yellowSquareArray:void 0}}()},function(r,o,e){\"use strict\";Object.defineProperty(o,\"__esModule\",{value:!0});var t=e(3),n=e(2),i=e(1),u=e(0);(new(function(){function r(){this.myBoard=new t.default,this.myGUI=new i.default(this.myBoard),this.rolledNumber=0,this.buttonContainer=document.getElementById(\"buttonContainer\")}return r.prototype.initialize=function(){this.currentTurnColor=n.Color.RED,this.myGUI.drawBoardWithPawns(),document.getElementById(\"turnIndicator\").innerHTML=n.Color[this.currentTurnColor]+\"'s turn\"},r.prototype.rollDie=function(){this.rolledNumber=Math.floor(6*Math.random())+1,this.myBoard.getNumberOfPawnsOnBoardOfColor(this.currentTurnColor)>0?(this.buttonContainer.innerHTML=\"<div id='diceNumber'>choose a pawn to move \"+this.rolledNumber+\" steps.</div>\",6==this.rolledNumber&&(this.myBoard.getNumberOfPawnsOnBoardOfColor(this.currentTurnColor)+this.myBoard.getNumberOfPawnsOnEndRowOfColor(this.currentTurnColor)<4&&this.placeNewPawnOnBoard(),this.buttonContainer.innerHTML+=\"<div id='diceNumber'>You rolled a 6! A new pawn has been placed on the board. </div>\")):(6==this.rolledNumber?(this.buttonContainer.innerHTML=\"<div id='diceNumber'>You rolled a 6! A new pawn has been placed on the board. </div>\",this.placeNewPawnOnBoard()):this.buttonContainer.innerHTML=\"<div id='diceNumber'>You rolled \"+this.rolledNumber+\". You will get a new pawn on the board when you roll 6</div>\",this.buttonContainer.innerHTML+=\"<button onclick=myGame.nextTurn()> ok </button>\")},r.prototype.mousePosition=function(r){this.mouseX=r.clientX-10,this.mouseY=r.clientY-10},r.prototype.choosePawn=function(){if(0!=this.rolledNumber){var r=this.myBoard.getClickedSquareIndex(this.mouseX,this.mouseY),o=this.myBoard.squareArray[r].occupyingPiece;o.color==this.currentTurnColor&&this.findNewPositionForPawn(o,r)}},r.prototype.findNewPositionForPawn=function(r,o){var e=o+this.rolledNumber,t=e>=this.myBoard.squareArray.length?e-this.myBoard.squareArray.length:e,n=(this.myBoard.getFinalSquareOfColor(this.currentTurnColor),this.myBoard.getSquareArrayOfColor(this.currentTurnColor)),i=3-this.myBoard.getNumberOfPawnsOnEndRowOfColor(this.currentTurnColor);this.passedFinalSquare(o,r.color)?(console.log(\"passed final square, moving to endrow\"),this.movePawn(n,o,i,r)):(console.log(\"not passing final square, moving to new square\"),this.movePawn(this.myBoard.squareArray,o,t,r))},r.prototype.movePawn=function(r,o,e,t){r[e].occupyingPiece.color==t.color?alert(\"You can't move your pawn to land on one of your own pawns.\"):(this.myBoard.squareArray[o].occupyingPiece=u.default.NONE,r[e].occupyingPiece=t,this.myGUI.drawBoardWithPawns(),this.nextTurn())},r.prototype.passedFinalSquare=function(r,o){var e=this.myBoard.getFinalSquareOfColor(this.currentTurnColor);if(o==n.Color.RED){if(r+this.rolledNumber>this.myBoard.squareArray.length)return!0}else if(e>=r&&e<r+this.rolledNumber)return!0;return!1},r.prototype.placeNewPawnOnBoard=function(){var r=this.myBoard.getStartingSquareOfColor(this.currentTurnColor);this.myBoard.squareArray[r].occupyingPiece=u.default.returnPieceOfColor(this.currentTurnColor),this.myGUI.drawBoardWithPawns()},r.prototype.nextTurn=function(){4==this.myBoard.getNumberOfPawnsOnEndRowOfColor(this.currentTurnColor)?this.gameOver():(this.rolledNumber=0,this.currentTurnColor=3==this.currentTurnColor?0:this.currentTurnColor+1,document.getElementById(\"turnIndicator\").innerHTML=n.Color[this.currentTurnColor]+\"'s turn\",document.getElementById(\"buttonContainer\").innerHTML=\"<button id='turnButton' onclick=myGame.rollDie() >Roll die!</button>\")},r.prototype.gameOver=function(){this.myGUI.gameOver(this.currentTurnColor)},r}())).initialize()}]);","extractedComments":[]}