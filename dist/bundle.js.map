{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/Board.ts","webpack:///./js/Bot.ts","webpack:///./js/Color.ts","webpack:///./js/ColouredSquare.ts","webpack:///./js/GameController.ts","webpack:///./js/GameGUI.ts","webpack:///./js/GameState.ts","webpack:///./js/Piece.ts","webpack:///./js/PieceHolder.ts","webpack:///./js/Square.ts","webpack:///./js/main.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/main.ts\");\n","import { Color } from \"./Color\";\r\nimport ColouredSquare from \"./ColouredSquare\";\r\nimport PieceHolder from \"./PieceHolder\";\r\nimport Square from \"./Square\";\r\nimport Piece from \"./Piece\";\r\n\r\nexport default class Board {\r\n    squareArray : Square[]= [];\r\n    private readonly CORNER_SEQUENCE : String[] = [\r\n        \"E5\", \"N4\", \"E2\", \"S4\", \"E4\", \"S2\", \"W4\", \"S4\", \"W2\", \"N4\", \"W4\", \"N1\"\r\n    ];\r\n\r\n    redSquareArray : ColouredSquare[] =[];\r\n    blueSquareArray : ColouredSquare[] = [];\r\n    greenSquareArray : ColouredSquare[] = [];\r\n    yellowSquareArray : ColouredSquare[] = [];\r\n\r\n    readonly RED_START: number = 0;\r\n    readonly RED_FINAL: number = 39;\r\n    readonly BLUE_START: number = 10;\r\n    readonly BLUE_FINAL: number = 9;\r\n    readonly GREEN_START : number = 20;\r\n    readonly GREEN_FINAL : number = 19;\r\n    readonly YELLOW_START : number = 30;\r\n    readonly YELLOW_FINAL : number = 29;\r\n\r\n    readonly SQUARE_SIZE : number = 50;\r\n\r\n\r\n    constructor() {\r\n        this.fillSquareArray();\r\n        this.fillColouredSquareArrays();       \r\n    }\r\n\r\n    private fillSquareArray() {\r\n            let x : number = -1;\r\n            let y : number = 4;\r\n            let currentCornerSequence = 0;\r\n            \r\n            for(var i = 0; i < 40; i++) {\r\n                let dir = this.CORNER_SEQUENCE[currentCornerSequence];\r\n                let dirLetter = dir.substr(0,1);\r\n                let dirNumber : number = parseInt(dir.substr(1,1));\r\n          \r\n                if(dirLetter == 'E') {\r\n                    x += 1;\r\n                }\r\n                if(dirLetter == 'N') {\r\n                    y -= 1;\r\n                }\r\n                if(dirLetter == 'S') {\r\n                    y += 1;\r\n                }\r\n                if(dirLetter == 'W') {\r\n                    x -= 1;\r\n                }\r\n    \r\n                dirNumber = dirNumber -1;\r\n                this.CORNER_SEQUENCE[currentCornerSequence] = dirLetter + String(dirNumber);\r\n                \r\n                if (dirNumber <1 ) {\r\n                    currentCornerSequence++;\r\n                }\r\n             \r\n                this.squareArray[i] = new Square(PieceHolder.NONE, x*this.SQUARE_SIZE, y*this.SQUARE_SIZE, Color.NONE);\r\n        }\r\n\r\n        this.squareArray[this.RED_START].isStartingSquareOfColor = Color.RED;\r\n        this.squareArray[this.RED_START].occupyingPiece = PieceHolder.RED;\r\n        this.squareArray[this.RED_FINAL].isFinalSquareOfColor = Color.RED;\r\n\r\n        this.squareArray[this.BLUE_START].isStartingSquareOfColor = Color.BLUE;\r\n        this.squareArray[this.BLUE_START].occupyingPiece = PieceHolder.BLUE;\r\n        this.squareArray[this.BLUE_FINAL].isFinalSquareOfColor = Color.BLUE;\r\n\r\n        this.squareArray[this.GREEN_START].isStartingSquareOfColor = Color.GREEN;\r\n        this.squareArray[this.GREEN_START].occupyingPiece = PieceHolder.GREEN;\r\n        this.squareArray[this.GREEN_FINAL].isFinalSquareOfColor = Color.GREEN;\r\n\r\n        this.squareArray[this.YELLOW_START].isStartingSquareOfColor = Color.YELLOW;\r\n        this.squareArray[this.YELLOW_START].occupyingPiece = PieceHolder.YELLOW;\r\n        this.squareArray[this.YELLOW_FINAL].isFinalSquareOfColor = Color.YELLOW;\r\n    }\r\n\r\n    private fillColouredSquareArrays() {\r\n        for (var i =0; i < 4; i++) {\r\n            this.redSquareArray[i] = new ColouredSquare(PieceHolder.NONE, this.SQUARE_SIZE + i * this.SQUARE_SIZE ,5 * this.SQUARE_SIZE, Color.RED);\r\n            this.blueSquareArray[i] = new ColouredSquare(PieceHolder.NONE,5 * this.SQUARE_SIZE , 50 + i *this.SQUARE_SIZE, Color.BLUE);\r\n            this.greenSquareArray[i] = new ColouredSquare(PieceHolder.NONE,9*this.SQUARE_SIZE - i * this.SQUARE_SIZE, 5 * this.SQUARE_SIZE, Color.BLUE);\r\n            this.yellowSquareArray[i] = new ColouredSquare(PieceHolder.NONE, 5*this.SQUARE_SIZE, 9 * 50 - i *this.SQUARE_SIZE, Color.YELLOW);\r\n        }\r\n\r\n        this.redSquareArray[3].occupyingPiece = PieceHolder.RED;\r\n        this.redSquareArray[1].occupyingPiece = PieceHolder.RED;\r\n        this.redSquareArray[2].occupyingPiece = PieceHolder.RED;\r\n    }\r\n\r\n    public getClickedSquareIndex(x: number, y: number): number {       \r\n        for (var i = 0; i < this.squareArray.length; i++) {\r\n            let s: Square = this.squareArray[i];\r\n            if (x > s.xPos && x < s.xPos + this.SQUARE_SIZE && y > s.yPos && y < s.yPos + this.SQUARE_SIZE) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    public isClickedSquareOfColor(x: number, y: number, c: Color): boolean {\r\n        let clickedPiece : Piece = PieceHolder.NONE;       \r\n        for (var i = 0; i < this.squareArray.length; i++) {\r\n            let s: Square = this.squareArray[i];\r\n            if (x > s.xPos && x < s.xPos + this.SQUARE_SIZE && y > s.yPos && y < s.yPos + this.SQUARE_SIZE) {\r\n                clickedPiece = this.squareArray[i].occupyingPiece;\r\n            }\r\n        }\r\n        if(clickedPiece.color === c) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public getNumberOfPawnsOnBoardOfColor(c : Color) {\r\n        let count = 0;\r\n        for (var i = 0; i < this.squareArray.length; i++) {\r\n            let s: Square = this.squareArray[i];        \r\n            if (s.occupyingPiece.color == c) {\r\n                count ++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    public getIndicesPawnsOnBoardOfColor(c : Color): number[] {\r\n        let pawns = new Array();\r\n        for (var i = 0; i < this.squareArray.length; i++) {\r\n            let s: Square = this.squareArray[i];   \r\n            if (s.occupyingPiece.color == c) {\r\n                console.log(\"found piece\");\r\n                pawns.push(i);\r\n            }\r\n        }\r\n        console.log(pawns);\r\n        return pawns;\r\n    }\r\n\r\n    public getNumberOfPawnsOnEndRowOfColor(c: Color) {\r\n        let arrayToCheck = [];\r\n        if (c == Color.RED) arrayToCheck = this.redSquareArray;\r\n        if (c == Color.BLUE) arrayToCheck = this.blueSquareArray;\r\n        if (c == Color.GREEN) arrayToCheck = this.greenSquareArray;\r\n        if (c == Color.YELLOW) arrayToCheck = this.yellowSquareArray;\r\n\r\n        let count = 0;\r\n        for (let i = 0; i < arrayToCheck.length; i++) {\r\n            if(arrayToCheck[i].occupyingPiece == PieceHolder.returnPieceOfColor(c)) {\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    public static getStartingSquareOfColor(c: Color) {\r\n        if (c == Color.RED) return 0;\r\n        if (c == Color.BLUE) return 10;\r\n        if (c == Color.GREEN) return 20;\r\n        if (c == Color.YELLOW) return 30;\r\n    }\r\n\r\n    public static passedFinalSquareOfColor(c: Color, previousIndex : number, roll : number): boolean {\r\n        let finalSquareOfColor;\r\n        if (c == Color.RED) finalSquareOfColor = 39;\r\n        if (c == Color.BLUE) finalSquareOfColor = 9;\r\n        if (c == Color.GREEN) finalSquareOfColor = 19;\r\n        if (c == Color.YELLOW) finalSquareOfColor = 29;\r\n\r\n        if (c == Color.RED) {\r\n            if (previousIndex + roll > 39) {\r\n                return true;\r\n            }\r\n        } else {\r\n            if (finalSquareOfColor >= previousIndex && finalSquareOfColor < previousIndex + roll) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n        \r\n    public getSquareArrayOfColor(c: Color) {\r\n        if (c == Color.RED) return this.redSquareArray;\r\n        if (c == Color.BLUE) return this.blueSquareArray;\r\n        if (c == Color.GREEN) return this.greenSquareArray;\r\n        if (c == Color.YELLOW) return this.yellowSquareArray;\r\n    }\r\n}","import { Color } from \"./Color\";\r\nimport GameState from \"./GameState\";\r\nimport GameController from \"./GameController\";\r\n\r\nexport class Bot {\r\n    aiColor : Color;\r\n\r\n    constructor(c : Color) {\r\n        this.aiColor = c;\r\n    }\r\n\r\n    public checkIfAIturnIsNext(turnColor: Color): boolean {\r\n        if (turnColor == this.aiColor) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public handleTurn(myGc : GameController): GameController {\r\n        if(myGc.gameState.myBoard.getNumberOfPawnsOnBoardOfColor(Color.BLUE) == 0) {\r\n            myGc = this.clickOk(myGc);\r\n        } else {\r\n            let chosenPawn = this.decideMove(myGc.gameState);\r\n            myGc.assignPawnClick(chosenPawn);\r\n            myGc.selectAndMovePawnAndMoveToNextTurn();\r\n        }\r\n        return myGc;\r\n    }\r\n\r\n    public clickOk(myGc : GameController): GameController {\r\n        myGc.moveToNextTurn()\r\n        return myGc;\r\n    }\r\n\r\n    public decideMove(gs: GameState): number {\r\n        let pawns = gs.myBoard.getIndicesPawnsOnBoardOfColor(this.aiColor);\r\n\r\n        if (pawns.length == 1) {\r\n            console.log(\"the index of the first pawn is:\" + pawns[0]);\r\n            return pawns[0];\r\n\r\n        } else {\r\n            for (let pawn of pawns) {\r\n                console.log(pawns);\r\n                console.log(\"rolled number\" + gs.rolledNumber);\r\n                let resultingPos = pawn + gs.rolledNumber;\r\n                let colorOnResultPos = gs.myBoard.squareArray[resultingPos].occupyingPiece.color;\r\n                if ( colorOnResultPos != Color.NONE && colorOnResultPos != this.aiColor) {\r\n                    return pawn;\r\n                }\r\n            }\r\n            return pawns[pawns.length-1];\r\n        }\r\n    }\r\n\r\n    private delay(milliseconds: number) {\r\n        return new Promise<void>(resolve => {\r\n            setTimeout(resolve, milliseconds);\r\n        });\r\n    }\r\n}","export enum Color {\r\n    RED,\r\n    BLUE,\r\n    GREEN,\r\n    YELLOW,\r\n    NONE\r\n}","import { Color } from \"./Color\";\r\nimport Square from \"./Square\";\r\nimport Piece from \"./Piece\";\r\n\r\nexport default class ColouredSquare extends Square {\r\n    myColor: Color; \r\n\r\n    constructor(myPiece : Piece, x : number, y: number, myCol : Color) {\r\n        super(myPiece, x , y, myCol);\r\n        this.myColor = myCol;\r\n    }\r\n}\r\n","import Board from \"./Board\";\r\nimport { Color } from \"./Color\";\r\nimport Piece from \"./Piece\";\r\nimport PieceHolder from \"./PieceHolder\";\r\nimport Square from \"./Square\";\r\nimport GameState from \"./GameState\";\r\nimport GameGUI from \"./GameGUI\";\r\nimport { Bot } from \"./Bot\";\r\n\r\nexport default class GameController {\r\n    mouseX;\r\n    mouseY;\r\n    gameState : GameState;\r\n    gameStateArray : GameState[];\r\n    gameover : boolean;\r\n    clickedPawnIndex : number = 0;\r\n    bot : Bot;\r\n    \r\n    public initialize(): void {\r\n        let board : Board = new Board();\r\n        this.gameState = new GameState(board, Color.RED);\r\n        this.bot = new Bot(Color.BLUE);\r\n    }\r\n\r\n    public checkIfOwnPawnIsClicked(e): boolean {\r\n        if (this.gameState.myBoard.isClickedSquareOfColor(e.clientX,e.clientY, this.gameState.currentTurnColor)) {\r\n            this.clickedPawnIndex = this.gameState.myBoard.getClickedSquareIndex(e.clientX, e.clientY);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public assignPawnClick(index) {\r\n        this.clickedPawnIndex = index;\r\n    }\r\n\r\n    public rollDie(): void{\r\n        let roll = Math.floor(Math.random() * 6) + 1;\r\n        if (roll == 6) {\r\n            const totalPawns = this.gameState.myBoard.getNumberOfPawnsOnBoardOfColor(this.gameState.currentTurnColor) + this.gameState.myBoard.getNumberOfPawnsOnEndRowOfColor(this.gameState.currentTurnColor);\r\n            if ( totalPawns < 4) {\r\n                let startSquare = Board.getStartingSquareOfColor(this.gameState.currentTurnColor); \r\n                this.gameState.myBoard.squareArray[startSquare].occupyingPiece = PieceHolder.returnPieceOfColor(this.gameState.currentTurnColor);\r\n            }\r\n        }\r\n        this.gameState.rolledNumber= roll;\r\n    }\r\n\r\n    public selectAndMovePawnAndMoveToNextTurn(): void {\r\n        const rolledPluscurrent = this.clickedPawnIndex + this.gameState.rolledNumber;\r\n        const resultingPosition = rolledPluscurrent > 39 ?  rolledPluscurrent - 38 : rolledPluscurrent;\r\n\r\n        if (Board.passedFinalSquareOfColor(this.gameState.currentTurnColor, this.clickedPawnIndex, this.gameState.rolledNumber)) {\r\n            this.movePawnToFinalRow();\r\n        } else {\r\n           this.movePawn(resultingPosition);\r\n        }\r\n    }\r\n\r\n    private movePawn(resultPos : number): void {\r\n        if (this.gameState.myBoard.squareArray[resultPos].occupyingPiece.color == this.gameState.currentTurnColor) {\r\n            alert(\"You can't move your pawn to land on one of your own pawns.\")\r\n        } else {\r\n            this.gameState.myBoard.squareArray[this.clickedPawnIndex].occupyingPiece = PieceHolder.NONE;\r\n            this.gameState.myBoard.squareArray[resultPos].occupyingPiece = PieceHolder.returnPieceOfColor(this.gameState.currentTurnColor);\r\n            this.moveToNextTurn();        \r\n        }\r\n    }\r\n   \r\n    private movePawnToFinalRow(): void {\r\n        let c = this.gameState.currentTurnColor;\r\n        let finalRow = this.gameState.myBoard.getSquareArrayOfColor(c);\r\n        let firstFreeSpotOnFinalRow = 3 - this.gameState.myBoard.getNumberOfPawnsOnEndRowOfColor(c);\r\n        this.gameState.myBoard.squareArray[this.clickedPawnIndex].occupyingPiece = PieceHolder.NONE;\r\n        this.gameState.myBoard.getSquareArrayOfColor(c)[firstFreeSpotOnFinalRow].occupyingPiece = PieceHolder.returnPieceOfColor(c);\r\n        this.moveToNextTurn();\r\n    }\r\n\r\n    public moveToNextTurn() {\r\n        if (this.gameState.myBoard.getNumberOfPawnsOnEndRowOfColor(this.gameState.currentTurnColor) == 4) {\r\n            alert(Color[this.gameState.currentTurnColor] + \"won!\");\r\n            this.initialize();\r\n        } else {\r\n            this.gameState.currentTurnColor = this.gameState.currentTurnColor == 3 ? 0 : this.gameState.currentTurnColor + 1;\r\n            this.rollDie();\r\n        }\r\n    }\r\n}\r\n\r\n","import Board from \"./Board\";\r\nimport { Color } from \"./Color\";\r\nimport PieceHolder from \"./PieceHolder\";\r\nimport GameState from \"./GameState\";\r\n\r\nexport default class GameGUI {\r\n\r\n    public static drawGameState(GS: GameState): void {\r\n        console.log(document);\r\n        document.getElementById(\"rolledNumber\").innerHTML = \"\";\r\n        document.getElementById(\"buttonContainer\").innerHTML = \"\";\r\n\r\n        const colorString = Color[GS.currentTurnColor];\r\n        document.getElementById(\"turnIndicator\").innerHTML = colorString + \"'s turn!\";\r\n        \r\n        if (GS.myBoard.getNumberOfPawnsOnBoardOfColor(GS.currentTurnColor) == 0) {\r\n            if (GS.rolledNumber == 6) {\r\n                let str = \"You rolled a 6! You get a new pawn.\";\r\n            } else {\r\n                let str = \"You have currently have no pawns on the board. You will get a pawn when you roll a 6.\";\r\n                document.getElementById(\"rolledNumber\").innerHTML = str;\r\n                document.getElementById(\"buttonContainer\").innerHTML = \"<button onclick='gc.moveToNextTurn();GameGUI.drawGameState(gc.gameState);'>ok</button>\";\r\n            }\r\n        } else {\r\n                document.getElementById(\"rolledNumber\").innerHTML = \"You have rolled a \" + GS.rolledNumber + \". Please select a piece to move.\";\r\n        }        \r\n\r\n        var canvas = <HTMLCanvasElement> document.getElementById(\"myCanvas\");  \r\n        var ctx = canvas.getContext(\"2d\"); \r\n\r\n        //Draw the normal board\r\n        for (var i = 0; i < GS.myBoard.squareArray.length; i++) {\r\n            let thisSquare = GS.myBoard.squareArray[i];\r\n            \r\n            ctx.fillStyle = \"white\";\r\n\r\n            if (thisSquare.isStartingSquareOfColor == Color.RED) {\r\n                ctx.fillStyle = \"pink\";\r\n            } else if (thisSquare.isStartingSquareOfColor == Color.BLUE) {\r\n                ctx.fillStyle = \"lightblue\";\r\n            } else if (thisSquare.isStartingSquareOfColor == Color.YELLOW) {\r\n                ctx.fillStyle = \"lightyellow\";\r\n            } else if (thisSquare.isStartingSquareOfColor == Color.GREEN) {\r\n                ctx.fillStyle = \"lightgreen\";\r\n            }\r\n            ctx.beginPath();\r\n            ctx.fillRect(thisSquare.xPos, thisSquare.yPos, 50, 50);          \r\n            ctx.strokeRect(thisSquare.xPos, thisSquare.yPos, 50, 50);\r\n            ctx.stroke();\r\n                   \r\n\r\n            //draw the Pieces\r\n            if (thisSquare.occupyingPiece != PieceHolder.NONE) {\r\n                ctx.beginPath();\r\n                ctx.arc(thisSquare.xPos+25,thisSquare.yPos+25,20,0,2*Math.PI);\r\n                ctx.fillStyle = thisSquare.occupyingPiece.colorString;\r\n                ctx.fill();\r\n                ctx.stroke();\r\n            }\r\n        }\r\n        \r\n        //Draw the final 4 squares of each color\r\n        for (var i = 0; i <4; i++) {\r\n            let red = GS.myBoard.redSquareArray[i];\r\n            let blue = GS.myBoard.blueSquareArray[i];\r\n            let green = GS.myBoard.greenSquareArray[i];\r\n            let yellow = GS.myBoard.yellowSquareArray[i];\r\n\r\n            ctx.fillStyle = \"red\";            \r\n            ctx.fillRect(red.xPos, red.yPos, 50, 50);\r\n            ctx.strokeRect(red.xPos, red.yPos, 50, 50);\r\n\r\n            ctx.fillStyle = \"blue\";\r\n            ctx.fillRect(blue.xPos, blue.yPos, 50, 50);\r\n            ctx.strokeRect(blue.xPos, blue.yPos, 50, 50);\r\n  \r\n            ctx.fillStyle = \"green\";\r\n            ctx.fillRect(green.xPos, green.yPos, 50, 50);\r\n            ctx.strokeRect(green.xPos, green.yPos, 50, 50);\r\n\r\n            ctx.fillStyle = \"yellow\";\r\n            ctx.fillRect(yellow.xPos, yellow.yPos, 50, 50);\r\n            ctx.strokeRect(yellow.xPos, yellow.yPos, 50, 50);\r\n\r\n            ctx.stroke(); \r\n\r\n                //draw the Pieces\r\n            if (red.occupyingPiece!= PieceHolder.NONE) {\r\n                ctx.beginPath();\r\n                ctx.arc(red.xPos+25,red.yPos+25,20,0,2*Math.PI);\r\n                ctx.fillStyle = red.occupyingPiece.colorString;\r\n                ctx.fill();\r\n                ctx.stroke();\r\n            }\r\n\r\n            if (blue.occupyingPiece!= PieceHolder.NONE) {\r\n                ctx.beginPath();\r\n                ctx.arc(blue.xPos+25,blue.yPos+25,20,0,2*Math.PI);\r\n                ctx.fillStyle = blue.occupyingPiece.colorString;\r\n                ctx.fill();\r\n                ctx.stroke();\r\n            }\r\n            if (green.occupyingPiece!= PieceHolder.NONE) {\r\n                ctx.beginPath();\r\n                ctx.arc(green.xPos+25,green.yPos+25,20,0,2*Math.PI);\r\n                ctx.fillStyle = green.occupyingPiece.colorString;\r\n                ctx.fill();\r\n                ctx.stroke();\r\n            }\r\n            if (yellow.occupyingPiece!= PieceHolder.NONE) {\r\n                ctx.beginPath();\r\n                ctx.arc(yellow.xPos+25,yellow.yPos+25,20,0,2*Math.PI);\r\n                ctx.fillStyle = yellow.occupyingPiece.colorString;\r\n                ctx.fill();\r\n                ctx.stroke();\r\n            }\r\n        }\r\n    }\r\n    \r\n    public gameOver(c : Color) {\r\n        var canvas = <HTMLCanvasElement> document.getElementById(\"myCanvas\");  \r\n        var ctx = canvas.getContext(\"2d\"); \r\n        ctx.font = \"30px Arial\";\r\n        let str = Color[c].toString; \r\n        ctx.fillText(str + \" wins!\",300,50); \r\n    }\r\n}","import Board from \"./Board\";\r\nimport { Color } from \"./Color\";\r\nimport Piece from \"./Piece\";\r\nimport PieceHolder from \"./PieceHolder\";\r\nimport Square from \"./Square\";\r\n\r\nexport default class GameState {\r\n    myBoard : Board;\r\n    currentTurnColor : Color;\r\n    dieRolled : boolean;\r\n    rolledNumber: number;\r\n    readonly NR_OF_SQUARES_IN_BOARD = 39;\r\n\r\n    constructor (newBoard : Board, newTurnColor : Color, isDieRolled = false, newRolledNumber = 0) {\r\n        this.myBoard = newBoard;\r\n        this.currentTurnColor = newTurnColor;\r\n        this.dieRolled = isDieRolled;\r\n        this.rolledNumber = newRolledNumber;\r\n    }\r\n}","import { Color } from \"./Color\";\r\n\r\nexport default class Piece {\r\n\r\n    constructor (public colorString : string, public color : Color, public number: number) {\r\n\r\n    }\r\n}"," import { Color } from \"./Color\";\r\n import Piece from \"./Piece\";\r\n \r\n export default class PieceHolder {\r\n     static BLUE : Piece = new Piece(\"blue\", Color.BLUE,1);\r\n     static RED : Piece = new Piece(\"red\", Color.RED,1);\r\n     static YELLOW : Piece = new Piece(\"yellow\", Color.YELLOW, 1);\r\n     static GREEN : Piece = new Piece(\"green\", Color.GREEN, 1);\r\n     static NONE : Piece = new Piece(\"white\", Color.NONE, 0);\r\n\r\n     public static returnPieceOfColor(c: Color) {\r\n         if (c==Color.BLUE) {\r\n             return this.BLUE;\r\n         }\r\n         if (c==Color.RED) {\r\n            return this.RED;\r\n        }\r\n        if (c==Color.GREEN) {\r\n            return this.GREEN;\r\n        }\r\n        if (c==Color.YELLOW) {\r\n            return this.YELLOW;\r\n        }\r\n     }\r\n}","import { Color } from \"./Color\";\r\nimport Piece from \"./Piece\";\r\n\r\nexport default class Square {\r\n    isStartingSquareOfColor : Color;\r\n    occupyingPiece : Piece;\r\n    xPos : number;\r\n    yPos : number;\r\n    isFinalSquareOfColor : Color;  \r\n\r\n    constructor(myPiece : Piece, x : number, y: number, startColor : Color) {\r\n        this.occupyingPiece = myPiece;\r\n        this.xPos = x;\r\n        this.yPos = y;\r\n        this.isStartingSquareOfColor = startColor;\r\n\r\n    }  \r\n}\r\n","import GameController from \"./GameController\";\r\nimport GameGUI from \"./GameGUI\";\r\nimport Piece from \"./Piece\";\r\nimport { Bot } from \"./Bot\";\r\nimport { Color } from \"./Color\";\r\n\r\nfunction init() {\r\n    var gc : GameController = new GameController();\r\n    gc.initialize();\r\n    const bot : Bot = new Bot(Color.BLUE);\r\n    window[\"gc\"] = gc; \r\n    window[\"GameGUI\"] = GameGUI; \r\n    gc.rollDie();\r\n    GameGUI.drawGameState(gc.gameState); \r\n\r\n    document.getElementById(\"myCanvas\").addEventListener(\"click\", event => { \r\n         playTurn(event);\r\n    });\r\n\r\n    function playTurn(event) {\r\n        if (gc.checkIfOwnPawnIsClicked(event)) {\r\n            gc.selectAndMovePawnAndMoveToNextTurn();\r\n            GameGUI.drawGameState(gc.gameState);\r\n\r\n            if (bot.checkIfAIturnIsNext(gc.gameState.currentTurnColor)) {\r\n                document.getElementById(\"myCanvas\").outerHTML = document.getElementById(\"myCanvas\").outerHTML;\r\n                GameGUI.drawGameState(gc.gameState);\r\n                delay(1000).then(\r\n                    () => {gc = bot.handleTurn(gc),\r\n                            GameGUI.drawGameState(gc.gameState)\r\n                            document.getElementById(\"myCanvas\").addEventListener(\"click\", event => { \r\n                                playTurn(event);\r\n                           });\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    function delay(ms: number) {\r\n        return new Promise( resolve => setTimeout(resolve, ms) );\r\n    }\r\n}\r\n\r\ninit();\r\n\r\n\r\n"],"sourceRoot":""}