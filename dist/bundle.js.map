{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/Board.ts","webpack:///./js/Color.ts","webpack:///./js/ColouredSquare.ts","webpack:///./js/GUI.ts","webpack:///./js/Game.ts","webpack:///./js/Piece.ts","webpack:///./js/PieceHolder.ts","webpack:///./js/Square.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/Game.ts\");\n","import { Color } from \"./Color\";\r\nimport ColouredSquare from \"./ColouredSquare\";\r\nimport PieceHolder from \"./PieceHolder\";\r\nimport Square from \"./Square\";\r\n\r\nexport default class Board {\r\n    squareArray : Square[]= [];\r\n    cornerSequence : String[] = [\r\n        \"E5\", \"N4\", \"E2\", \"S4\", \"E4\", \"S2\", \"W4\", \"S4\", \"W2\", \"N4\", \"W4\", \"N1\"\r\n    ];\r\n\r\n    redSquareArray : ColouredSquare[] =[];\r\n    blueSquareArray : ColouredSquare[] = [];\r\n    greenSquareArray : ColouredSquare[] = [];\r\n    yellowSquareArray : ColouredSquare[] = [];\r\n\r\n    constructor() {\r\n        this.fillSquareArray();\r\n        this.fillColouredSquareArrays();\r\n       // this.piecesOnBoard();       \r\n    }\r\n\r\n        fillSquareArray() {\r\n            let x : number = -1;\r\n            let y : number = 4;\r\n            let currentCornerSequence = 0;\r\n            \r\n            for(var i = 0; i < 40; i++) {\r\n                let dir = this.cornerSequence[currentCornerSequence];\r\n    \r\n                let dirLetter = dir.substr(0,1);\r\n                let dirNumber : number = parseInt(dir.substr(1,1));\r\n          \r\n                if(dirLetter == 'E') {\r\n                    x += 1;\r\n                }\r\n                if(dirLetter == 'N') {\r\n                    y -= 1;\r\n                }\r\n                if(dirLetter == 'S') {\r\n                    y += 1;\r\n                }\r\n                if(dirLetter == 'W') {\r\n                    x -= 1;\r\n                }\r\n    \r\n                dirNumber = dirNumber -1;\r\n                this.cornerSequence[currentCornerSequence] = dirLetter + String(dirNumber);\r\n                \r\n                if (dirNumber <1 ) {\r\n                    currentCornerSequence++;\r\n                }\r\n             \r\n                this.squareArray[i] = new Square(PieceHolder.NONE, x*50,y*50, Color.NONE);\r\n        }\r\n\r\n        this.squareArray[0].isStartingSquareOfColor = Color.RED;\r\n        this.squareArray[0].occupyingPiece = PieceHolder.RED;\r\n        this.squareArray[39].isFinalSquareOfColor = Color.RED;\r\n\r\n        this.squareArray[10].isStartingSquareOfColor = Color.BLUE;\r\n        this.squareArray[10].occupyingPiece = PieceHolder.BLUE;\r\n        this.squareArray[9].isFinalSquareOfColor = Color.BLUE;\r\n\r\n        this.squareArray[20].isStartingSquareOfColor = Color.GREEN;\r\n        this.squareArray[20].occupyingPiece = PieceHolder.GREEN;\r\n        this.squareArray[19].isFinalSquareOfColor = Color.GREEN;\r\n\r\n        this.squareArray[30].isStartingSquareOfColor= Color.YELLOW;\r\n        this.squareArray[30].occupyingPiece= PieceHolder.YELLOW;\r\n        this.squareArray[29].isFinalSquareOfColor= Color.YELLOW;\r\n    }\r\n\r\n    fillColouredSquareArrays() {\r\n        //RED\r\n        for (var i =0; i < 4; i++) {\r\n            this.redSquareArray[i] = new ColouredSquare(PieceHolder.NONE,50 + i *50 ,5 * 50, Color.RED);\r\n            this.blueSquareArray[i] = new ColouredSquare(PieceHolder.NONE,5 * 50 , 50 + i *50, Color.BLUE);\r\n            this.greenSquareArray[i] = new ColouredSquare(PieceHolder.NONE,9*50 - i * 50, 5 * 50, Color.BLUE);\r\n            this.yellowSquareArray[i] = new ColouredSquare(PieceHolder.NONE,5*50, 9 * 50 - i *50, Color.YELLOW);\r\n        }\r\n    }\r\n\r\n    public getClickedSquareIndex(x: number, y: number): number {       \r\n        for (var i = 0; i < this.squareArray.length; i++) {\r\n            let s: Square = this.squareArray[i];\r\n            if (x > s.xPos && x < s.xPos + 50 && y > s.yPos && y < s.yPos + 50) {\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    public getNumberOfPawnsOnBoardOfColor(c : Color) {\r\n        let count = 0;\r\n        for (var i = 0; i < this.squareArray.length; i++) {\r\n            let s: Square = this.squareArray[i];        \r\n            if (s.occupyingPiece.color == c) {\r\n                count ++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    public getNumberOfPawnsOnEndRowOfColor(c: Color) {\r\n        let arrayToCheck = [];\r\n        if (c == Color.RED) arrayToCheck = this.redSquareArray;\r\n        if (c == Color.BLUE) arrayToCheck = this.blueSquareArray;\r\n        if (c == Color.GREEN) arrayToCheck = this.greenSquareArray;\r\n        if (c == Color.YELLOW) arrayToCheck = this.yellowSquareArray;\r\n\r\n        let count = 0;\r\n        for (let i = 0; i < arrayToCheck.length; i++) {\r\n            if(arrayToCheck[i].occupyingPiece == PieceHolder.returnPieceOfColor(c)) {\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    public getStartingSquareOfColor(c: Color) {\r\n        if (c == Color.RED) return 0;\r\n        if (c == Color.BLUE) return 10;\r\n        if (c == Color.GREEN) return 20;\r\n        if (c == Color.YELLOW) return 30;\r\n    }\r\n\r\n    public getFinalSquareOfColor(c: Color) {\r\n        if (c == Color.RED) return 39;\r\n        if (c == Color.BLUE) return 9;\r\n        if (c == Color.GREEN) return 19;\r\n        if (c == Color.YELLOW) return 29;\r\n    }\r\n\r\n    public getSquareArrayOfColor(c: Color) {\r\n        if (c == Color.RED) return this.redSquareArray;\r\n        if (c == Color.BLUE) return this.blueSquareArray;\r\n        if (c == Color.GREEN) return this.greenSquareArray;\r\n        if (c == Color.YELLOW) return this.yellowSquareArray;\r\n    }\r\n}","export enum Color {\r\n    RED,\r\n    BLUE,\r\n    GREEN,\r\n    YELLOW,\r\n    NONE\r\n}","import { Color } from \"./Color\";\r\nimport Square from \"./Square\";\r\nimport Piece from \"./Piece\";\r\n\r\nexport default class ColouredSquare extends Square {\r\n    myColor: Color; \r\n\r\n    constructor(myPiece : Piece, x : number, y: number, myCol : Color) {\r\n        super(myPiece, x , y, myCol);\r\n        this.myColor = myCol;\r\n    }\r\n}\r\n","import Board from \"./Board\";\r\nimport { Color } from \"./Color\";\r\nimport PieceHolder from \"./PieceHolder\";\r\n\r\nexport default class GUI {\r\n    boardToBeDrawn: Board;\r\n\r\n    constructor(b : Board) {\r\n        this.boardToBeDrawn = b;\r\n    }\r\n\r\n    public drawBoardWithPawns(): void {\r\n        var canvas = <HTMLCanvasElement> document.getElementById(\"myCanvas\");  \r\n        var ctx = canvas.getContext(\"2d\"); \r\n\r\n        //Draw the normal board\r\n        for (var i = 0; i < this.boardToBeDrawn.squareArray.length; i++) {\r\n            let thisSquare = this.boardToBeDrawn.squareArray[i];\r\n            \r\n            ctx.fillStyle = \"white\";\r\n\r\n            if (thisSquare.isStartingSquareOfColor == Color.RED) {\r\n                ctx.fillStyle = \"pink\";\r\n            } else if (thisSquare.isStartingSquareOfColor == Color.BLUE) {\r\n                ctx.fillStyle = \"lightblue\";\r\n            } else if (thisSquare.isStartingSquareOfColor == Color.YELLOW) {\r\n                ctx.fillStyle = \"lightyellow\";\r\n            } else if (thisSquare.isStartingSquareOfColor == Color.GREEN) {\r\n                ctx.fillStyle = \"lightgreen\";\r\n            }\r\n            ctx.beginPath();\r\n            ctx.fillRect(thisSquare.xPos, thisSquare.yPos, 50, 50);          \r\n            ctx.strokeRect(thisSquare.xPos, thisSquare.yPos, 50, 50);\r\n            ctx.stroke();\r\n                   \r\n\r\n            //draw the Pieces\r\n            if (thisSquare.occupyingPiece != PieceHolder.NONE) {\r\n                ctx.beginPath();\r\n                ctx.arc(thisSquare.xPos+25,thisSquare.yPos+25,20,0,2*Math.PI);\r\n                ctx.fillStyle = thisSquare.occupyingPiece.colorString;\r\n                ctx.fill();\r\n                ctx.stroke();\r\n            }\r\n        }\r\n        \r\n        //Draw the final 4 squares of each color\r\n        for (var i = 0; i <4; i++) {\r\n            let red = this.boardToBeDrawn.redSquareArray[i];\r\n            let blue = this.boardToBeDrawn.blueSquareArray[i];\r\n            let green = this.boardToBeDrawn.greenSquareArray[i];\r\n            let yellow = this.boardToBeDrawn.yellowSquareArray[i];\r\n\r\n            ctx.fillStyle = \"red\";            \r\n            ctx.fillRect(red.xPos, red.yPos, 50, 50);\r\n            ctx.strokeRect(red.xPos, red.yPos, 50, 50);\r\n\r\n            ctx.fillStyle = \"blue\";\r\n            ctx.fillRect(blue.xPos, blue.yPos, 50, 50);\r\n            ctx.strokeRect(blue.xPos, blue.yPos, 50, 50);\r\n  \r\n            ctx.fillStyle = \"green\";\r\n            ctx.fillRect(green.xPos, green.yPos, 50, 50);\r\n            ctx.strokeRect(green.xPos, green.yPos, 50, 50);\r\n\r\n            ctx.fillStyle = \"yellow\";\r\n            ctx.fillRect(yellow.xPos, yellow.yPos, 50, 50);\r\n            ctx.strokeRect(yellow.xPos, yellow.yPos, 50, 50);\r\n\r\n            ctx.stroke(); \r\n\r\n                //draw the Pieces\r\n            if (red.occupyingPiece!= PieceHolder.NONE) {\r\n                ctx.beginPath();\r\n                ctx.arc(red.xPos+25,red.yPos+25,20,0,2*Math.PI);\r\n                ctx.fillStyle = red.occupyingPiece.colorString;\r\n                ctx.fill();\r\n                ctx.stroke();\r\n            }\r\n\r\n            if (blue.occupyingPiece!= PieceHolder.NONE) {\r\n                ctx.beginPath();\r\n                ctx.arc(blue.xPos+25,blue.yPos+25,20,0,2*Math.PI);\r\n                ctx.fillStyle = blue.occupyingPiece.colorString;\r\n                ctx.fill();\r\n                ctx.stroke();\r\n            }\r\n            if (green.occupyingPiece!= PieceHolder.NONE) {\r\n                ctx.beginPath();\r\n                ctx.arc(green.xPos+25,green.yPos+25,20,0,2*Math.PI);\r\n                ctx.fillStyle = green.occupyingPiece.colorString;\r\n                ctx.fill();\r\n                ctx.stroke();\r\n            }\r\n            if (yellow.occupyingPiece!= PieceHolder.NONE) {\r\n                ctx.beginPath();\r\n                ctx.arc(yellow.xPos+25,yellow.yPos+25,20,0,2*Math.PI);\r\n                ctx.fillStyle = yellow.occupyingPiece.colorString;\r\n                ctx.fill();\r\n                ctx.stroke();\r\n            }\r\n\r\n        }\r\n\r\n        // ctx.onclick = function (event){\r\n        //     if (event.region) {\r\n        //         alert('You clicked ' + event.region);\r\n        //     }\r\n        // }\r\n    }\r\n    \r\n    public gameOver(c : Color) {\r\n        var canvas = <HTMLCanvasElement> document.getElementById(\"myCanvas\");  \r\n        var ctx = canvas.getContext(\"2d\"); \r\n        ctx.font = \"30px Arial\";\r\n        let str = Color[c].toString; \r\n        ctx.fillText(str + \" wins!\",300,50); \r\n    }\r\n}","import Board from \"./Board\";\r\nimport { Color } from \"./Color\";\r\nimport GUI from \"./GUI\";\r\nimport Piece from \"./Piece\";\r\nimport PieceHolder from \"./PieceHolder\";\r\nimport Square from \"./Square\";\r\n\r\nclass Game {\r\n    myBoard : Board;\r\n    myGUI : GUI;\r\n    currentTurnColor : Color;\r\n    mouseX;\r\n    mouseY;\r\n    rolledNumber;\r\n    buttonContainer;\r\n\r\n\r\n    constructor() {\r\n        this.myBoard = new Board();\r\n        this.myGUI = new GUI(this.myBoard);\r\n        this.rolledNumber = 0;\r\n        this.buttonContainer = document.getElementById(\"buttonContainer\");\r\n    }   \r\n\r\n    public initialize(): void {\r\n        this.currentTurnColor = Color.RED;\r\n        this.myGUI.drawBoardWithPawns();\r\n        document.getElementById(\"turnIndicator\").innerHTML = Color[this.currentTurnColor] + \"'s turn\";  \r\n    }\r\n\r\n    public rollDie(): void {\r\n        this.rolledNumber = Math.floor(Math.random() * 6) + 1;\r\n        let pawnsOnBoard = this.myBoard.getNumberOfPawnsOnBoardOfColor(this.currentTurnColor);\r\n\r\n        if (pawnsOnBoard > 0) {\r\n            this.buttonContainer.innerHTML = \"<div id='diceNumber'>choose a pawn to move \" +  this.rolledNumber + \" steps.</div>\";\r\n            if (this.rolledNumber == 6) {   \r\n               if(this.myBoard.getNumberOfPawnsOnBoardOfColor(this.currentTurnColor) + this.myBoard.getNumberOfPawnsOnEndRowOfColor(this.currentTurnColor) <4) {\r\n                    this.placeNewPawnOnBoard();\r\n               } \r\n               this.buttonContainer.innerHTML += \"<div id='diceNumber'>You rolled a 6! A new pawn has been placed on the board. </div>\";\r\n            }\r\n        } else {\r\n            if (this.rolledNumber == 6) {\r\n                this.buttonContainer.innerHTML = \"<div id='diceNumber'>You rolled a 6! A new pawn has been placed on the board. </div>\";\r\n                this.placeNewPawnOnBoard();        \r\n            } else {\r\n                this.buttonContainer.innerHTML = \"<div id='diceNumber'>You rolled \" +  this. rolledNumber + \". You will get a new pawn on the board when you roll 6</div>\";   \r\n            }\r\n            \r\n            this.buttonContainer.innerHTML += \"<button id='okButton' onclick=myGame.nextTurn()> ok </button>\";\r\n            //document.getElementById(\"okButton\").addEventListener(\"click\", () => this.nextTurn());\r\n        } \r\n    }\r\n\r\n    public mousePosition(e): void {\r\n        this.mouseX = e.clientX - 10;\r\n        this.mouseY = e.clientY - 10;\r\n    }\r\n\r\n    public choosePawn(): void {\r\n        if (this.rolledNumber != 0) {\r\n            let clickedSquareIndex = this.myBoard.getClickedSquareIndex(this.mouseX, this.mouseY);\r\n            let movedPiece : Piece = this.myBoard.squareArray[clickedSquareIndex].occupyingPiece;\r\n\r\n            if (movedPiece.color == this.currentTurnColor ) {       \r\n                this.findNewPositionForPawn(movedPiece, clickedSquareIndex);              \r\n            }\r\n        }\r\n    }\r\n\r\n    public findNewPositionForPawn(p : Piece, previous : number) {\r\n        let rolledPluscurrent = previous+this.rolledNumber;\r\n        let result = rolledPluscurrent >= this.myBoard.squareArray.length ?  rolledPluscurrent - this.myBoard.squareArray.length : rolledPluscurrent;\r\n        let finalSquareOfColor = this.myBoard.getFinalSquareOfColor(this.currentTurnColor);\r\n        let coloredSquareArray = this.myBoard.getSquareArrayOfColor(this.currentTurnColor);\r\n        let firstFreeSpotOnFinalRow = 3 - this.myBoard.getNumberOfPawnsOnEndRowOfColor(this.currentTurnColor);\r\n\r\n        if (this.passedFinalSquare(previous, p.color)) {\r\n            console.log(\"passed final square, moving to endrow\");\r\n            this.movePawn(coloredSquareArray, previous, firstFreeSpotOnFinalRow, p);\r\n        } else {\r\n            console.log(\"not passing final square, moving to new square\");\r\n            this.movePawn(this.myBoard.squareArray, previous, result, p);\r\n        }\r\n    }\r\n\r\n    public movePawn(row : Square[], source : number, dest : number, pawn : Piece) {\r\n        if (row[dest].occupyingPiece.color == pawn.color) {\r\n            alert(\"You can't move your pawn to land on one of your own pawns.\")\r\n        } else {\r\n            this.myBoard.squareArray[source].occupyingPiece = PieceHolder.NONE;\r\n            row[dest].occupyingPiece = pawn;\r\n            this.myGUI.drawBoardWithPawns();\r\n            this.nextTurn();\r\n        }\r\n    }\r\n\r\n    public passedFinalSquare(previousIndex : number, c : Color): boolean {\r\n        let finalSquareOfColor = this.myBoard.getFinalSquareOfColor(this.currentTurnColor);\r\n\r\n        if (c == Color.RED) {\r\n            if (previousIndex + this.rolledNumber > this.myBoard.squareArray.length) {\r\n                return true;\r\n            }\r\n        } else {\r\n            if (finalSquareOfColor >= previousIndex && finalSquareOfColor < previousIndex + this.rolledNumber) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public placeNewPawnOnBoard() {\r\n        let startSquare = this.myBoard.getStartingSquareOfColor(this.currentTurnColor); \r\n        this.myBoard.squareArray[startSquare].occupyingPiece = PieceHolder.returnPieceOfColor(this.currentTurnColor);\r\n        this.myGUI.drawBoardWithPawns(); \r\n    }\r\n    \r\n    public nextTurn() {   \r\n        if (this.myBoard.getNumberOfPawnsOnEndRowOfColor(this.currentTurnColor) == 4) {\r\n            this.gameOver();\r\n        } else {\r\n            this.rolledNumber = 0;\r\n            this.currentTurnColor = this.currentTurnColor == 3? 0 : this.currentTurnColor +1;\r\n            document.getElementById(\"turnIndicator\").innerHTML = Color[this.currentTurnColor] + \"'s turn\";  \r\n            document.getElementById(\"buttonContainer\").innerHTML = \"<button id='turnButton' onclick=myGame.rollDie() >Roll die!</button>\";\r\n            //document.getElementById(\"turnButton\").addEventListener(\"click\", () => myGame.rollDie());\r\n        }\r\n    }\r\n\r\n    public gameOver() {\r\n        this.myGUI.gameOver(this.currentTurnColor);\r\n    }\r\n}\r\n\r\nlet myGame : Game = new Game();\r\nmyGame.initialize();\r\n\r\nconst canvas = document.getElementById(\"myCanvas\");\r\ncanvas.addEventListener(\"mousemove\", event => myGame.mousePosition(event));\r\ncanvas.addEventListener(\"click\", () => myGame.choosePawn());\r\n\r\ndocument.getElementById(\"turnButton\").addEventListener(\"click\", () => myGame.rollDie());\r\n\r\nwindow[\"myGame\"] = myGame;\r\n","import { Color } from \"./Color\";\r\n\r\nexport default class Piece {\r\n\r\n    constructor (public colorString : string, public color : Color, public number: number) {\r\n\r\n    }\r\n}"," import { Color } from \"./Color\";\r\n import Piece from \"./Piece\";\r\n \r\n export default class PieceHolder {\r\n     static BLUE : Piece = new Piece(\"blue\", Color.BLUE,1);\r\n     static RED : Piece = new Piece(\"red\", Color.RED,1);\r\n     static YELLOW : Piece = new Piece(\"yellow\", Color.YELLOW, 1);\r\n     static GREEN : Piece = new Piece(\"green\", Color.GREEN, 1);\r\n     static NONE : Piece = new Piece(\"white\", Color.NONE, 0);\r\n\r\n     public static returnPieceOfColor(c: Color) {\r\n         if (c==Color.BLUE) {\r\n             return this.BLUE;\r\n         }\r\n         if (c==Color.RED) {\r\n            return this.RED;\r\n        }\r\n        if (c==Color.GREEN) {\r\n            return this.GREEN;\r\n        }\r\n        if (c==Color.YELLOW) {\r\n            return this.YELLOW;\r\n        }\r\n     }\r\n}","import { Color } from \"./Color\";\r\nimport Piece from \"./Piece\";\r\n\r\nexport default class Square {\r\n    isStartingSquareOfColor : Color;\r\n    occupyingPiece : Piece;\r\n    xPos : number;\r\n    yPos : number;\r\n    isFinalSquareOfColor : Color;  \r\n\r\n    constructor(myPiece : Piece, x : number, y: number, startColor : Color) {\r\n        this.occupyingPiece = myPiece;\r\n        this.xPos = x;\r\n        this.yPos = y;\r\n        this.isStartingSquareOfColor = startColor;\r\n\r\n    }  \r\n}\r\n"],"sourceRoot":""}